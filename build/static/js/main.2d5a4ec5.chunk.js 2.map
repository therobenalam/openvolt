{"version":3,"sources":["config/config.js","services/api.js","services/calculation.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["OPENVOLT_API_ENDPOINT","CARBON_INTENSITE_API_ENDPOINT","ACCESS_TOKEN","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","moment","require","fetchDataOfJan","_fetchDataOfJan","apply","arguments","_asyncToGenerator","_callee","_context","axios","get","concat","params","meter_id","granularity","start_date","end_date","headers","accept","x-api-key","fetchDataOfJanHh","_fetchDataOfJanHh","_callee2","response","_context2","data","t0","fetchCarbonIntensityHh","_x","_x2","_fetchCarbonIntensityHh","_callee3","from","to","_context3","fetchCarbonIntensityHhInterval","_x3","_x4","_fetchCarbonIntensityHhInterval","_callee5","startDate","endDate","_context5","_ref","_callee4","reject","intensityData","currentDate","endDateMoment","promiseList","chunkStartDate","chunkEndDate","_context4","isBefore","format","add","chunkSizeInDays","all","res","intensity","_toConsumableArray","err","_x9","_x10","fetchGenerationMixHh","_x5","_x6","_fetchGenerationMixHh","_callee6","_context6","fetchGenerationMixHhInterval","_x7","_x8","_fetchGenerationMixHhInterval","_callee8","_context8","_ref2","_callee7","generationMixData","_context7","generationMix","_x11","_x12","calculateTotalCO2EmissionsJan","_calculateTotalCO2EmissionsJan","_ref3","_slicedToArray","consumption","consumptionData","totalCO2Emissions","_loop","consumptionItem","formattedDateTime","start_interval","matchingIntensity","find","intensityItem","consumption_units","emissions","parseFloat","actual","console","log","sortObjectByValue","obj","keyValueArray","entries","sort","b","fromEntries","calculateGenerationMixJan","_calculateGenerationMixJan","_ref4","_ref5","_ref6","totalGenerationalMix","totalConsumption","_loop2","matchinggenerationMix","generationMixItem","j","generationmix","element","perc","fuel","el","error","Home","_useState","useState","_useState2","setTotalConsumption","_useState3","_useState4","co2Emissions","setCo2Emissionsn","_useState5","_useState6","setGenerationMix","_useState7","_useState8","isLoadingGeneration","setIsLoadingGeneration","_useState9","_useState10","isLoadingEmission","setIsLoadingEmission","isDataFetched","useEffect","_fetchData","NotificationManager","message","fetchData","React","createElement","className","Fragment","CountUp","start","end","duration","separator","style","padding","map","key","decimals","suffix","fontSize","App","Router","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","NotificationContainer"],"mappings":"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","file":"static/js/main.2d5a4ec5.chunk.js","sourcesContent":["// config.js\n\nconst OPENVOLT_API_ENDPOINT = 'https://api.openvolt.com/v1';\nconst CARBON_INTENSITE_API_ENDPOINT = 'https://api.carbonintensity.org.uk';\nconst ACCESS_TOKEN = 'test-Z9EB05N-07FMA5B-PYFEE46-X4ECYAR';\n\nexport { OPENVOLT_API_ENDPOINT, CARBON_INTENSITE_API_ENDPOINT, ACCESS_TOKEN };","// src/services/api.js\nimport axios from 'axios';\nimport { OPENVOLT_API_ENDPOINT, CARBON_INTENSITE_API_ENDPOINT, ACCESS_TOKEN } from '../config/config';\nconst moment = require('moment');\n\nexport async function fetchDataOfJan() {\n    return axios.get(`${OPENVOLT_API_ENDPOINT}/interval-data`, {\n        params: {\n            meter_id: '6514167223e3d1424bf82742',\n            granularity: 'month',\n            start_date: '2023-01-01',\n            end_date: '2023-01-31',\n        },\n        headers: {\n            accept: 'application/json',\n            'x-api-key': ACCESS_TOKEN,\n        }\n    });\n}\n\nexport async function fetchDataOfJanHh() {\n    try {\n        const response = await axios.get(`${OPENVOLT_API_ENDPOINT}/interval-data`, {\n            params: {\n                meter_id: '6514167223e3d1424bf82742',\n                granularity: 'hh',\n                start_date: '2023-01-01',\n                end_date: '2023-01-31',\n            },\n            headers: {\n                accept: 'application/json',\n                'x-api-key': ACCESS_TOKEN,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        throw error; // Handle errors in the component that calls this function\n    }\n}\n\nasync function fetchCarbonIntensityHh(from, to) {\n    return axios.get(`${CARBON_INTENSITE_API_ENDPOINT}/intensity/${from}/${to}`);\n}\n\nexport async function fetchCarbonIntensityHhInterval(startDate, endDate) {\n    return new Promise(async (resolve, reject) => {\n        const intensityData = [];\n        \n        const chunkSizeInDays = 14;\n        let currentDate = moment(startDate);\n        const endDateMoment = moment(endDate);\n        let promiseList = []\n        while (currentDate.isBefore(endDateMoment)) {\n            const chunkStartDate = currentDate.format('YYYY-MM-DD');\n            let chunkEndDate = moment(currentDate).add(chunkSizeInDays - 1, 'days').format('YYYY-MM-DD');\n            if (endDateMoment.isBefore(chunkEndDate))\n                chunkEndDate = endDateMoment.format('YYYY-MM-DD');\n            promiseList.push(fetchCarbonIntensityHh(chunkStartDate, chunkEndDate));\n\n            currentDate.add(chunkSizeInDays - 1, 'days');\n        }\n        Promise.all(promiseList).then((res) => {\n            for (let i = 0; i < res.length; i++) {\n                let intensity = res[i].data\n                intensityData.push(...intensity.data);\n            }\n            resolve({\n                'data': intensityData\n            })\n        }).catch((err) => {\n            reject(err)\n        })\n    })\n}\n\n\n\n\n\nasync function fetchGenerationMixHh(from, to) {\n\n    return axios.get(`${CARBON_INTENSITE_API_ENDPOINT}/generation/${from}/${to}`);\n}\n\nexport async function fetchGenerationMixHhInterval(startDate, endDate) {\n    return new Promise(async (resolve, reject) => {\n        const generationMixData = [];\n        const chunkSizeInDays = 14;\n        let currentDate = moment(startDate);\n        const endDateMoment = moment(endDate);\n        let promiseList = []\n        while (currentDate.isBefore(endDateMoment)) {\n            const chunkStartDate = currentDate.format('YYYY-MM-DD');\n            let chunkEndDate = moment(currentDate).add(chunkSizeInDays - 1, 'days').format('YYYY-MM-DD');\n            if (endDateMoment.isBefore(chunkEndDate))\n                chunkEndDate = endDateMoment.format('YYYY-MM-DD');\n            promiseList.push(fetchGenerationMixHh(chunkStartDate, chunkEndDate));\n\n            currentDate.add(chunkSizeInDays - 1, 'days');\n        }\n        Promise.all(promiseList).then((res) => {\n            for (let i = 0; i < res.length; i++) {\n                let generationMix = res[i].data\n                generationMixData.push(...generationMix.data);\n            }\n            resolve({\n                'data': generationMixData\n            })\n        }).catch((err) => {\n            reject(err)\n        })\n    })\n}\n","import { fetchDataOfJanHh, fetchCarbonIntensityHhInterval, fetchGenerationMixHhInterval } from '../services/api';\nconst moment = require('moment');\n\n\nexport async function calculateTotalCO2EmissionsJan() {\n    return new Promise(async (resolve, reject) => {\n            Promise.all([\n                fetchDataOfJanHh(),\n                fetchCarbonIntensityHhInterval('2023-01-01', '2023-02-01')\n            ])\n                .then(([consumption, intensity]) => {\n                    let consumptionData = consumption['data'];\n                    let intensityData = intensity['data'];\n\n                    // Initialize total CO2 emissions\n                    let totalCO2Emissions = 0;\n\n                    // Iterate through each consumption data point\n                    for (let i = 0; i < consumptionData.length; i++) {\n                        const consumptionItem = consumptionData[i];\n                        const formattedDateTime = moment(consumptionItem.start_interval).format(\"YYYY-MM-DDTHH:mm[Z]\");\n                        // Find the corresponding intensity data point based on the timestamp\n                        const matchingIntensity = intensityData.find(intensityItem => {\n                            return (\n                                intensityItem.from === formattedDateTime);\n                        });\n                        if (matchingIntensity && consumptionItem.consumption_units === 'kWh') {\n                            // Calculate CO2 emissions for the consumption data point and add it to the total\n                            const emissions =\n                                parseFloat(consumptionItem.consumption) *\n                                (matchingIntensity.intensity.actual / 1000);\n                            totalCO2Emissions += emissions;\n                        } else {\n                            console.log('Missing data')\n                        }\n                    }\n                    resolve(totalCO2Emissions);\n                }).catch((err)=>{\n                    console.log(\"ERRRR\", err)\n                    reject(err)\n                })\n    })\n}\n\nfunction sortObjectByValue(obj) {\n    const keyValueArray = Object.entries(obj);\n\n    keyValueArray.sort((a, b) => b[1] - a[1]);\n\n    const sortedObject = Object.fromEntries(keyValueArray);\n\n\n    return sortedObject;\n}\n\nexport async function calculateGenerationMixJan() {\n    return new Promise(async (resolve, reject) => {\n        try {\n            Promise.all([\n                fetchDataOfJanHh(),\n                fetchGenerationMixHhInterval('2023-01-01', '2023-02-01')\n            ])\n                .then(([consumption, generationMix]) => {\n                    let consumptionData = consumption['data']\n                    let generationMixData = generationMix['data']\n                    // Initialize total Generational Mix\n                    let totalGenerationalMix = {};\n                    let totalConsumption = 0\n                    // Iterate through each consumption data point\n                    for (let i = 0; i < consumptionData.length; i++) {\n                        const consumptionItem = consumptionData[i];\n                        const formattedDateTime = moment(consumptionItem.start_interval).format(\"YYYY-MM-DDTHH:mm[Z]\");\n                        // Find the corresponding generationMix data point based on the timestamp\n                        const matchinggenerationMix = generationMixData.find(generationMixItem => {\n                            return (\n                                generationMixItem.from === formattedDateTime);\n                        });\n                        if (matchinggenerationMix && consumptionItem.consumption_units === 'kWh') {\n                            // Calculate Geration Mix for the consumption data point and add it to the total\n                            let consumption = parseFloat(consumptionItem.consumption)\n\n                            for (let j = 0; j < matchinggenerationMix.generationmix.length; j++) {\n                                let element = matchinggenerationMix.generationmix[j]\n                                let value = element.perc * consumption / 100\n                                if (totalGenerationalMix.hasOwnProperty(element.fuel)) {\n                                    totalGenerationalMix[element.fuel] += value\n                                } else {\n                                    totalGenerationalMix[element.fuel] = value\n                                }\n                            };\n\n                            totalConsumption += consumption\n\n\n\n                        } else {\n                            console.log('Missing data')\n                        }\n                    }\n\n                    Object.keys(totalGenerationalMix).forEach((el) => {\n                        totalGenerationalMix[el] = (totalGenerationalMix[el] / totalConsumption) * 100\n                    })\n                    totalGenerationalMix = sortObjectByValue(totalGenerationalMix);\n                    resolve(totalGenerationalMix);\n                })\n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n","// src/components/Home.js\n\nimport React, { useEffect, useState } from 'react';\nimport CountUp from 'react-countup';\nimport './CountUpWidgets.css'; // Import your CSS file for styling\nimport { fetchDataOfJan } from '../services/api';\nimport { calculateTotalCO2EmissionsJan, calculateGenerationMixJan } from '../services/calculation'\nimport { NotificationManager } from 'react-notifications';\n\n\n\n\nfunction Home() {\n    const [totalConsumption, setTotalConsumption] = useState(0);\n    const [co2Emissions, setCo2Emissionsn] = useState(0);\n    const [generationMix, setGenerationMix] = useState({});\n    const [isLoadingGeneration, setIsLoadingGeneration] = useState(0);\n    const [isLoadingEmission, setIsLoadingEmission] = useState(0);\n\n    let isDataFetched = false;\n\n    useEffect(() => {\n        // Check if data is already fetched\n        if (isDataFetched) {\n            return;\n        }\n\n        // Set the flag to prevent further calls\n        isDataFetched = true;\n        async function fetchData() {\n            try {\n                fetchDataOfJan().then((res) => {\n                    let consumption = res.data\n                    setTotalConsumption(consumption['data'][0].consumption)\n                }).catch((err) => {\n                    NotificationManager.error(err.message, 'Error', 3000);\n                })\n                setIsLoadingEmission(1)\n                setIsLoadingGeneration(1)\n                calculateTotalCO2EmissionsJan().then((emissions) => {\n                    setCo2Emissionsn(emissions)\n                    setIsLoadingEmission(0)\n                }).catch((err) => {\n                    setIsLoadingEmission(-1)\n                    NotificationManager.error(err.message, 'Error fetching CO2 Emissions', 3000);\n\n                })\n                calculateGenerationMixJan().then((generationMix) => {\n                    setGenerationMix(generationMix)\n                    setIsLoadingGeneration(0)\n                }).catch((err) => {\n                    setIsLoadingGeneration(-1)\n                    NotificationManager.error(err.message, 'Error fetching Generation Mix', 3000);\n\n                })\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                NotificationManager.error('error', 'Error', 3000);\n\n            }\n        }\n        fetchData();\n    }, []);\n    return (\n        <div>\n            {/* Header */}\n            <header className=\"page-header\">\n                <h1>Openvolt</h1>\n            </header>\n\n            <div className=\"countup-widgets-container\">\n                <div className=\"countup-widget\">\n                    <h2>Energy consumed (kWh)</h2>\n                    {totalConsumption === 0 ? (\n                        <div className=\"loading-spinner\"></div>\n                    ) : (\n                        <>\n                            <CountUp start={0} end={totalConsumption} duration={2} separator=\",\" className=\"countup-number\" />\n                        </>\n                    )}\n                </div>\n\n                <div className=\"countup-widget\">\n                    <h2>CO2 (kgs) emitted</h2>\n                    {isLoadingEmission === 1 ? (\n                        <div className=\"loading-spinner\"></div>\n                    ) : isLoadingEmission === -1 ? (\n                        <div className=\"error-message\">Error: Failed to load emission data</div>\n                    ) : (\n                        <CountUp\n                            start={0}\n                            end={co2Emissions}\n                            duration={2}\n                            separator=\",\"\n                            className=\"countup-number\"\n                        />\n                    )}\n                </div>\n            </div>\n            <div className=\"countup-widgets-container\">\n                <div className=\"countup-widget\">\n                    <h2>Generation Mix</h2>\n                    {\n                        isLoadingGeneration === 1 ? (\n                            <div className=\"loading-spinner\"></div>\n                        ) : isLoadingGeneration === -1 ? (\n                            <div className=\"error-message\">Error: Failed to load generation data</div>\n                        ) : (\n                            <div className='container'>\n                                <ul style={{ padding: '0' }}>\n                                    {Object.keys(generationMix).map((key) => (\n                                        <li key={key} className='list-item'>\n                                            <span className='key'>{key}:</span>\n                                            <CountUp\n                                                start={0}\n                                                end={generationMix[key]}\n                                                duration={2}\n                                                decimals={1}\n                                                suffix=\"%\"\n                                                style={{ fontSize: '1.2em' }}\n                                            />\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )\n                    }\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","// src/App.js\n\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-notifications/lib/notifications.css'; // Import the default CSS\nimport { NotificationContainer } from 'react-notifications';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    <NotificationContainer />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}